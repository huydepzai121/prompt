#!/usr/bin/env node

/**
 * CLI entry point cho augprompt package
 * X·ª≠ l√Ω command line arguments v√† g·ªçi core functions
 */

const { Command } = require('commander');
const chalk = require('chalk');
const { version } = require('../package.json');
const {
  listAvailablePrompts,
  copyPrompts
} = require('../lib/index');

const program = new Command();

program
  .name('augprompt')
  .description('CLI tool ƒë·ªÉ copy t·∫•t c·∫£ Augment AI prompts v√†o d·ª± √°n (m·∫∑c ƒë·ªãnh v·ªõi --force)')
  .version(version);

// Default command - copy t·∫•t c·∫£ prompts v·ªõi force=true m·∫∑c ƒë·ªãnh
program
  .action(async () => {
    try {
      console.log(chalk.blue('üöÄ ƒêang copy t·∫•t c·∫£ Augment AI prompts...'));
      // M·∫∑c ƒë·ªãnh s·ª≠ d·ª•ng force=true ƒë·ªÉ ƒë∆°n gi·∫£n h√≥a
      const result = await copyPrompts(true);

      if (result.success) {
        console.log(chalk.green(`‚úÖ ƒê√£ copy th√†nh c√¥ng ${result.copiedCount} prompts v√†o .augment/rules/`));
        if (result.skippedCount > 0) {
          console.log(chalk.yellow(`‚ö†Ô∏è  ƒê√£ ghi ƒë√® ${result.skippedCount} files ƒë√£ t·ªìn t·∫°i`));
        }
        console.log(chalk.gray('üí° S·ª≠ d·ª•ng "augprompt --list" ƒë·ªÉ xem danh s√°ch prompts c√≥ s·∫µn'));
      } else {
        console.log(chalk.red('‚ùå C√≥ l·ªói x·∫£y ra khi copy prompts'));
        if (result.errors && result.errors.length > 0) {
          result.errors.forEach(error => console.log(chalk.red(`   ${error}`)));
        }
        process.exit(1);
      }
    } catch (error) {
      console.error(chalk.red('‚ùå L·ªói:'), error.message);
      process.exit(1);
    }
  });

// Option --list: hi·ªÉn th·ªã danh s√°ch prompts c√≥ s·∫µn
program
  .option('-l, --list', 'hi·ªÉn th·ªã danh s√°ch t·∫•t c·∫£ prompts c√≥ s·∫µn')
  .hook('preAction', async (thisCommand) => {
    if (thisCommand.opts().list) {
      try {
        const prompts = await listAvailablePrompts();
        console.log(chalk.blue('üìã Danh s√°ch Augment AI prompts c√≥ s·∫µn:'));
        console.log('');
        prompts.forEach((prompt, index) => {
          console.log(`${index + 1}. ${chalk.green(prompt.name)} - ${prompt.description}`);
        });
        console.log('');
        console.log(chalk.gray(`T·ªïng c·ªông: ${prompts.length} prompts`));
        process.exit(0);
      } catch (error) {
        console.error(chalk.red('‚ùå L·ªói khi ƒë·ªçc danh s√°ch prompts:'), error.message);
        process.exit(1);
      }
    }
  });



program.parse();
